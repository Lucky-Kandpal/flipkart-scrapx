/* tslint:disable */
/* eslint-disable */
/**
 * Parses the HTML body and returns the search results.
 */
export function parse_search_results(webpage_body: string): Search;
/**
 * Parses the HTML body and returns the product details.
 */
export function parse_product_details(webpage_body: string): ProductDetails;
export function build_search_url(query: string, params: SearchParams): string;
/**
 * The details of a Flipkart Product.
 *
 * Use the `ProductDetails::fetch` method to fetch the details of a product
 * from the product url.
 */
export interface ProductDetails {
    /**
     * Product name
     */
    name?: string;
    /**
     * Whether the product is in stock or not.
     */
    in_stock: boolean;
    /**
     * Current price of the product.
     */
    current_price?: number;
    /**
     * Original price of the product.
     */
    original_price?: number;
    /**
     * Product ID
     */
    product_id?: string;
    /**
     * URL to product, usually shortened and cleaner.
     */
    share_url: string;
    /**
     * Rating of the product.
     */
    rating?: number;
    /**
     * Whether it is f-assured produtc or not.
     */
    f_assured: boolean;
    /**
     * Highlights of the product.
     */
    highlights: string[];
    /**
     * Primary seller of the product.
     */
    seller?: Seller;
    /**
     * URL to thumbnails of the product.
     */
    thumbnails: string[];
    /**
     * Offers available on the product.
     */
    offers: Offer[];
    /**
     * Specifications of the product.
     */
    specifications: Specifications[];
}

/**
 * Product found in search results
 */
export interface SearchResult {
    /**
     * Name of the product
     */
    product_name: string;
    /**
     * Link to the product
     */
    product_link: string;
    /**
     * URL to the thumbnail of the product
     */
    thumbnail: string;
    /**
     * Current price of the product
     */
    current_price?: number;
    /**
     * Original price of the product
     */
    original_price?: number;
}

/**
 * Specifications represents a group of specifications.
 */
export interface Specifications {
    /**
     * The category of the specifications.
     * For example: `General`, `Display Features`, `Camera Features` etc.
     */
    category: string;
    /**
     * The specifications.
     */
    specifications: Specification[];
}

/**
 * A single specification (key-value pair) of a Product.
 */
export interface Specification {
    /**
     * The name (key) of the specification.
     */
    name: string;
    /**
     * The value of the specification.
     */
    value: string;
}

/**
 * Information about the offers available on a Product.
 */
export interface Offer {
    /**
     * The category are typically like: `Bank Offer`,
     * `Exchange Offer`, `No Cost EMI Available`,
     * `Patner Offer` etc.
     */
    category?: string;
    /**
     * The description of the offer.
     */
    description: string;
}

/**
 * Information about the seller of a Product.
 */
export interface Seller {
    /**
     * Name of the seller.
     */
    name: string;
    /**
     * Rating of the seller.
     */
    rating?: number;
}

/**
 * Wrapper of the search results vector.
 */
export type Search = SearchResult[];

/**
 * The sort order of the search results.
 */
export type SortOrder = "relevance" | "price_low_to_high" | "price_high_to_low" | "newest_first" | "popularity";

/**
 * Parameters for the search request.
 */
export interface SearchParams {
    /**
     * The page number to return.
     */
    page_number: number | undefined;
    /**
     * The sort order of the results.
     */
    sort: SortOrder | undefined;
    /**
     * Minimum price range for the search.
     *
     * Flipkart rounds off or alters the range based on product.
     */
    min_price: number | undefined;
    /**
     * Maximum price range for the search.
     *
     * Flipkart rounds off or alter the range based on product.
     */
    max_price: number | undefined;
    /**
     * Other parameters to be passed in URL query param of search request.
     */
    others: Map<string, string> | undefined;
}

